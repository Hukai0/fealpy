from typing import Protocol, Sequence, TypeVar

from ...backend import TensorLike
from ...mesh.mesh_base import Mesh
from ..utils import example_import_util


class WavePDEDataProtocol(Protocol):
    def geo_dimension(self) -> int: ...
    def domain(self) -> Sequence[float]: ...
    def duaration(self) -> Sequence[float]: ...
    def init_solution(self, p: TensorLike) -> TensorLike: ...
    def init_solution_t(self, p: TensorLike) -> TensorLike: ...
    def solution(self, p: TensorLike, t: float) -> TensorLike: ...
    def gradient(self, p: TensorLike, t: float) -> TensorLike: ...
    def source(self, p: TensorLike, t: float) -> TensorLike: ...
    def dirichlet(self, p: TensorLike, t:float) -> TensorLike: ...
    def is_dirichlet_boundary(self, p: TensorLike) -> TensorLike: ...

WavePDEDataT = TypeVar('WavePDEDataT', bound=WavePDEDataProtocol)


DATA_TABLE = {
    # example name: (file_name, class_name)
    # "coscos": ("coscosdata", "CosCosData"),

}


def get_example(key: str) -> WavePDEDataProtocol:
    return example_import_util("wave", key, DATA_TABLE)
